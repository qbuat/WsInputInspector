#!/usr/bin/env python

import logging;
import os
logging.basicConfig()
log = logging.getLogger(os.path.basename(__file__))
log.setLevel(logging.INFO)


from tools.yields import latex_line, pretty_yield_line, signal_latex_line
from tools.analysis import measurement
from tools.sample import Sample
from tools.plotting import yields_chart, sample_pie, significance_chart, syst_yields_chart
from tools import categories
from rootpy.plotting import set_style
from rootpy.plotting.base import convert_color
import matplotlib.pyplot as plt
import ROOT
if __name__ == '__main__':
    
    import argparse
    from rootpy.io import root_open

    parser = argparse.ArgumentParser()
    parser.add_argument('file1')
    parser.add_argument('--channel', default='hadhad', choices=['leplep', 'lephad', 'hadhad'])
    args = parser.parse_args()


    rfile = root_open(args.file1, 'read')
    lines = []
    lines_with_errors = []

    meas = measurement(rfile, args.channel)

    samples = meas.backgrounds
    data = meas.data

    cats = categories[args.channel]


    plt.figure(1, figsize=(15,10))
    for icat, cat in enumerate(cats):
        plt.subplot(3, 2, icat + 1)
        log.info(cat)
        yields_chart(rfile, samples, data, cat)

#     plt.figure(2,figsize=(15,10))
#     for icat, cat in enumerate(cats):
#         log.info(cat)
#         plt.subplot(3, 2, icat + 1)
#         sample_pie(rfile, higgs_samples, cat, no_explode=True)


#     plt.figure(3)
#     significance_chart(rfile, Higgs, Bkg, cats)

#     sys_high, sys_low = Ztt.systematics(cat, rfile)    
#     systs = sys_high + sys_low
#     for isys, sys in enumerate(systs):
#         plt.figure(3 + isys + 1)
#         log.info(sys)
#         syst_yields_chart(rfile, Ztt, sys, cats)

    plt.show()
